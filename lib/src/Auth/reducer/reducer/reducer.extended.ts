// This file has been generated by reducer-gen (@Stefan Pauka) written in 2020.

import extendedActions from "./../actions/action.extended";
import getDefaultState from "./../defaultState.base.generated";
// import actions from "./../actions/action.base.generated";
import AuthReducerActions from "./../reducerActions/reducerActions.main.generated";
import State from "./../state";

// Uncomment for some typechecking:
// import { isAuthReducerActionsBase } from "./../reducerActions/reducerActions.base.generated";
// import { isAuthReducerActionsExtended } from "./../reducerActions/reducerActions.extended";

/**
 * You may add here extending reducer behaviors for this features reducer
 */

const authReducerExtended = (
    state: State = getDefaultState(),
    action: AuthReducerActions
): State => {
    switch (action.type) {
        case extendedActions.SET_AUTH_PROVIDER_SERVICE:
            return {
                ...state,
                services: {
                    ...(state.services || {}),
                    [action.provider]: action.next,
                },
            };
        case extendedActions.SET_AUTH_USER:
            return {
                ...state,
                users: {
                    ...(state.users || {}),
                    [action.provider]: action.next,
                },
            };
        default:
            return state;
    }
};

export default authReducerExtended;
