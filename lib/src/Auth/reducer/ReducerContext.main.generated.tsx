// This file has been generated by reducer-gen (@Stefan Pauka) written in 2020.
// DO NOT Change anything inside this file. Every time the generator is used, it will be overwritten.

import React from "react";
import State from "./state";
import authReducer from "./reducer/reducer.main.generated";
import AuthReducerActions from "./reducerActions/reducerActions.main.generated";
import getAuthDefaultState from "./defaultState.base.generated";

export interface IAuthReducerContext {
    state: State;
    dispatch: React.Dispatch<AuthReducerActions>;
}

export type IDispatchAuthReducerContext = React.Dispatch<AuthReducerActions>;

export type IStateAuthReducerContext = State;

export const AuthReducerContext = React.createContext<IAuthReducerContext>({
    state: getAuthDefaultState(),
    dispatch: () => undefined,
});

export const DispatchAuthReducerContext = React.createContext<IDispatchAuthReducerContext>(() => undefined);

export const StateAuthReducerContext = React.createContext<IStateAuthReducerContext>(getAuthDefaultState());

export const AuthReducerContextProvider = (props: {
    children: React.ReactNode;
}) => {
    const { children } = props;

    const [state, dispatch] = React.useReducer(
    authReducer,
    undefined,
    getAuthDefaultState
    );

    const context: {
    state: State;
    dispatch: React.Dispatch<AuthReducerActions>;
    } = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);

    return (
    <DispatchAuthReducerContext.Provider value={dispatch}>
        <StateAuthReducerContext.Provider value={state}>
            <AuthReducerContext.Provider value={context}>
                {children}
            </AuthReducerContext.Provider>
        </StateAuthReducerContext.Provider>
    </DispatchAuthReducerContext.Provider>
    );
};

export const useAuthReducerContext: () => IAuthReducerContext = () => {
    return React.useContext<IAuthReducerContext>(AuthReducerContext);
};

export const useAuthReducerContextState: () => IStateAuthReducerContext = () => {
    return React.useContext<IStateAuthReducerContext>(StateAuthReducerContext);
};

export const useAuthReducerContextDispatch: () => IDispatchAuthReducerContext = () => {
    return React.useContext<IDispatchAuthReducerContext>(DispatchAuthReducerContext);
};
